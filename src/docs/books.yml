definitions:
  Book:
    title: Book
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific Book
      name:
        type: string
        description: Name of the Book
      createdAt:
        type: string
        format: date-time
        description: Book creation datetime
      updatedAt:
        type: string
        format: date-time
        description: Book update datetime
  NewBook:
    title: NewBook
    type: object
    properties:
      name:
        type: string
        description: Name of the Book
  Error:
    title: Error
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  ServerError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ServerError
  NotFoundError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: NotFoundError
  ValidationError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ValidationError
      - properties:
          details:
            type: array
            items:
              title: FieldError
              type: object
              properties:
                message:
                  type: string
                param:
                  type: string

/books:
  get:
    summary: List all books
    description: Returns books
    produces:
      - application/json
    tags:
      - Books
    responses:
      200:
        description: An array of books
        schema:
          title: Books
          type: array
          items:
            $ref: '#/definitions/Book'
  post:
    summary: Create a new book
    description: Create an book
    produces:
      - application/json
    tags:
      - Books
    parameters:
      - name: BookParams
        description: POST params for an book
        in: body
        required: true
        schema:
          $ref: '#/definitions/NewBook'
    responses:
      201:
        description: Newly created book object
        schema:
          title: Book
          type: object
          $ref: '#/definitions/Book'
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

/books/{id}:
  get:
    summary: Get an book
    description: Get book information
    produces:
      - application/json
    tags:
      - Books
    parameters:
      - name: id
        description: Unique identifier of the book
        in: path
        required: true
        type: integer
    responses:
      200:
        description: Book object
        schema:
          title: Book
          type: object
          $ref: '#/definitions/Book'
      404:
        description: Book not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

  put:
    summary: Update an book
    description: Update an book
    produces:
      - application/json
    tags:
      - Books
    parameters:
      - name: id
        description: Unique identifier of the book
        in: path
        required: true
        type: integer
      - name: BookParams
        description: PUT params for an book
        in: body
        required: true
        schema:
          $ref: '#/definitions/NewBook'
    responses:
      200:
        description: Updated book object
        schema:
          title: UpdatedBook
          type: object
          properties:
            id:
              type: number
              description: Unique identifier representing a specific book
            name:
              type: string
              description: Name of the book
            updatedAt:
              type: string
              format: date-time
              description: Updated book datetime
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      404:
        description: Book not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

  delete:
    summary: Delete an book
    description: Delete an book
    produces:
      - application/json
    tags:
      - Books
    parameters:
      - name: id
        description: Unique identifier of the book
        in: path
        required: true
        type: integer
    responses:
      204:
        description: Book deleted (no-content)
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      404:
        description: Book not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'
